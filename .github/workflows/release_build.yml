name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.10.13, 3.11.9, 3.12.5]

    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Checkout submodules
      run: |
        git submodule update --init --recursive

    - name: Set up Docker BuildKit
      run: |
        echo 'DOCKER_BUILDKIT=1' >> $GITHUB_ENV

    - name: Build Docker Image
      run: |
        docker build -f tools/Dockerfile --build-arg PYTHON_VERSION=${{ matrix.python-version }} -o . .

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Build with Poetry
      run: |
        poetry install --with=dev
        poetry build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-artifacts
        path: dist/*

  upload_release:
    permissions: write-all
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist-artifacts

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in *.tar.gz *.whl; do
          echo "Uploading $file"
          gh release upload ${{ github.ref_name }} "$file"
        done
